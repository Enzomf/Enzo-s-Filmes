{"version":3,"file":"static/js/264.07c5e4e5.chunk.js","mappings":"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","sources":["components/Carrousel Skeleton/carroulselSkeleton.js","components/Content Carrousel/ContentCarrousel.js","components/Content Carrousel/styles.js","pages/Filmes/index.js.js"],"sourcesContent":["import { Navigation } from \"swiper\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport { SwiperSlide, Swiper } from \"swiper/react\"\r\n\r\nimport { MediaSection, SectionTitle } from \"../Content Carrousel/styles\"\r\nimport { MediaCardC } from \"../Media Card/styles\"\r\n\r\n\r\n\r\nfunction CarrouselSkeleton({ content }) {\r\n    return (\r\n        content.map((section, index) => (\r\n\r\n            <MediaSection key={index}>\r\n                <SectionTitle>{section.slug}</SectionTitle>\r\n                <Swiper modules={[Navigation]} navigation={true} slidesPerView={\"auto\"} className=\"mySwiper\" loop=\"true\" spaceBetween={30} breakpoints={{\r\n                    0: {\r\n                        slidesPerView: 1.15,\r\n                    },\r\n                    350: {\r\n                        slidesPerView: 1.5\r\n                    },\r\n\r\n                    400: {\r\n                        slidesPerView: 1.6\r\n                    },\r\n                    460: {\r\n                        slidesPerView: 2.1\r\n                    },\r\n                    500: {\r\n                        slidesPerView: 2.3\r\n                    },\r\n                    550: {\r\n                        slidesPerView: 2.5\r\n                    },\r\n                    600: {\r\n                        slidesPerView: 2.8\r\n                    },\r\n                    680: {\r\n                        slidesPerView: 3.3\r\n                    },\r\n                    800: {\r\n                        slidesPerView: 3.8\r\n                    },\r\n                    900: {\r\n                        slidesPerView: 4.2\r\n                    }\r\n                    ,\r\n\r\n                    1080: {\r\n                        slidesPerView: 5.3\r\n                    },\r\n                    1300: {\r\n                        slidesPerView: 5.8\r\n                    },\r\n                    1400: {\r\n                        slidesPerView: 6.2\r\n                    },\r\n                    1500: {\r\n                        slidesPerView: 6.5\r\n                    },\r\n                    1600: {\r\n                        slidesPerView: 6.8\r\n                    },\r\n                    1700: {\r\n                        slidesPerView: 7.5\r\n                    },\r\n                    1800: {\r\n                        slidesPerView: 7.5\r\n                    },\r\n                }} >\r\n                    {\r\n                        section.content.map((_, index) => (\r\n                            <SwiperSlide key={index}>\r\n                                <MediaCardC>\r\n                                    <Skeleton variant=\"rounded\" sx={{ background: \"#1C1C1C\", width: \"200px\", height: \"250px\" }} />\r\n                                </MediaCardC>\r\n                            </SwiperSlide>\r\n                        ))\r\n\r\n                    }\r\n                </Swiper>\r\n            </MediaSection>\r\n\r\n\r\n        ))\r\n    )\r\n}\r\n\r\n\r\nexport default CarrouselSkeleton","import { Navigation, Lazy } from \"swiper\";\nimport { SwiperSlide, Swiper } from \"swiper/react\";\n\nimport { SectionTitle, MediaSection } from \"./styles\";\nimport MediaCard from \"../Media Card/MediaCard\";\n\nfunction ContentCarrousel({ content }) {\n  return (\n    <MediaSection>\n      <SectionTitle>\n        {content.slug} {content.icon}\n      </SectionTitle>\n      <Swiper\n        modules={[Navigation, Lazy]}\n        grabCursor={true}\n        navigation={true}\n        slidesPerView={\"auto\"}\n        className=\"mySwiper\"\n        spaceBetween={30}\n        loop=\"true\"\n        lazy={true}\n        preloadImages={false}\n        on={{\n          lazyImageReady: (swiper) => {\n            console.log(swiper);\n          },\n        }}\n        breakpoints={{\n          0: {\n            slidesPerView: 1.15,\n          },\n          350: {\n            slidesPerView: 1.5,\n          },\n\n          400: {\n            slidesPerView: 1.6,\n          },\n          460: {\n            slidesPerView: 2.1,\n          },\n          500: {\n            slidesPerView: 2.3,\n          },\n          550: {\n            slidesPerView: 2.5,\n          },\n          600: {\n            slidesPerView: 2.8,\n          },\n          680: {\n            slidesPerView: 3.3,\n          },\n          800: {\n            slidesPerView: 3.8,\n          },\n          900: {\n            slidesPerView: 4.2,\n          },\n          1080: {\n            slidesPerView: 5.3,\n          },\n          1300: {\n            slidesPerView: 5.8,\n          },\n          1400: {\n            slidesPerView: 6.2,\n          },\n          1500: {\n            slidesPerView: 6.5,\n          },\n          1600: {\n            slidesPerView: 6.8,\n          },\n          1700: {\n            slidesPerView: 7.5,\n          },\n          1800: {\n            slidesPerView: 7.5,\n          },\n        }}\n      >\n        {content.content.results.map((media) => (\n          <SwiperSlide key={media.id} className=\"swiper-lazy\">\n            <MediaCard content={content} media={media} />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n    </MediaSection>\n  );\n}\n\nexport default ContentCarrousel\n","import styled from \"styled-components\"\n\nconst MediaSection = styled.section`\n    width: 100%;\n    margin: 2em 0 2em 0 ;\n   \n\n    svg{\n        width:25px;\n        margin: auto 0\n    }\n    `\n\nconst SectionTitle = styled.h2`\n        color: #FFFF;\n        margin-bottom: 0.5em;\n        font-size: 2em;\n        font-weight: normal ;\n        display: flex;\n        align-items: center;\n        gap: 0.5em;\n    `\n\nexport { SectionTitle, MediaSection }","import React from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport LazyLoad from \"react-lazy-load\";\r\nimport { AiFillFire } from \"react-icons/ai\";\r\nimport { RiKnifeBloodFill } from \"react-icons/ri\";\r\nimport { MdOutlineRecommend } from \"react-icons/md\";\r\nimport { BiLaugh, BiMoviePlay } from \"react-icons/bi\";\r\nimport { GiGingerbreadMan, GiTightrope, GiTomato } from \"react-icons/gi\";\r\n\r\nimport axios_ from \"../../axiosConfig\";\r\nimport Container from \"../../components/Container/Container\";\r\nimport ContentCarrousel from \"../../components/Content Carrousel/ContentCarrousel\";\r\nimport CarrouselSkeleton from \"../../components/Carrousel Skeleton/carroulselSkeleton\";\r\n\r\nfunction Filmes() {\r\n  const SkeletonData = [\r\n    {\r\n      slug: \"Em Alta\",\r\n      content: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n    {\r\n      slug: \"Recomendados\",\r\n      type: \"tv\",\r\n      content: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n    {\r\n      slug: \"Ação\",\r\n      type: \"movie\",\r\n      content: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n    {\r\n      slug: \"Aventura\",\r\n      type: \"tv\",\r\n      content: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n    },\r\n  ];\r\n\r\n  async function getFilmes() {\r\n    let response = [\r\n      {\r\n        slug: \"Em Alta\",\r\n        icon: <AiFillFire />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/movie/popular?\")).data\r\n      },\r\n      {\r\n        slug: \"Recomendados\",\r\n        icon: <MdOutlineRecommend />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/discover/movie?sort_by=popularity.desc&page=2\")).data\r\n      },\r\n      {\r\n        slug: \"Melhor Avaliados\",\r\n        icon: <GiTomato />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/movie/top_rated?page=1\")).data\r\n      },\r\n      {\r\n        slug: \"No ar\",\r\n        icon: <BiMoviePlay />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/movie/now_playing?page=1\")).data\r\n      },\r\n      {\r\n        slug: \"Aventura\",\r\n        icon: <GiTightrope />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/discover/movie?with_genres=12\")).data\r\n      },\r\n      {\r\n        slug: \"Terror\",\r\n        icon: <RiKnifeBloodFill />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/discover/movie?with_genres=27\")).data\r\n      },\r\n      {\r\n        slug: \"Comédia\",\r\n        type: \"movie\",\r\n        icon: <BiLaugh />,\r\n        content: await (await axios_.get(\"/discover/movie?with_genres=35&page=2\")).data\r\n      },\r\n      {\r\n        slug: \"Animação\",\r\n        icon: <GiGingerbreadMan />,\r\n        type: \"movie\",\r\n        content: await (await axios_.get(\"/discover/movie?with_genres=35&page=16\")).data\r\n      },\r\n    ];\r\n\r\n    return response;\r\n    // setHomeMidia(response)\r\n  }\r\n\r\n  const filmes = useQuery({\r\n    queryKey: [\"filmes\"],\r\n    queryFn: getFilmes,\r\n    refetchOnWindowFocus: false,\r\n  });\r\n\r\n  if (filmes.isLoading)\r\n    return (\r\n      <Container>\r\n        <CarrouselSkeleton content={SkeletonData} />\r\n      </Container>\r\n    );\r\n\r\n  return (\r\n    <Container>\r\n      {filmes.data && (\r\n        <>\r\n          <ContentCarrousel content={filmes.data[0]} />\r\n\r\n          <ContentCarrousel content={filmes.data[1]} />\r\n\r\n          <LazyLoad offset={0.80}>\r\n            <ContentCarrousel content={filmes.data[2]} />\r\n          </LazyLoad>\r\n          <LazyLoad offset={0.80}>\r\n            <ContentCarrousel content={filmes.data[3]} />\r\n          </LazyLoad>\r\n          <LazyLoad offset={0.80}>\r\n            <ContentCarrousel content={filmes.data[4]} />\r\n          </LazyLoad>\r\n          <LazyLoad offset={0.80}>\r\n            <ContentCarrousel content={filmes.data[5]} />\r\n          </LazyLoad>\r\n          <LazyLoad offset={0.80}>\r\n            <ContentCarrousel content={filmes.data[6]} />\r\n          </LazyLoad>\r\n          <LazyLoad offset={0.80}>\r\n            <ContentCarrousel content={filmes.data[7]} />\r\n          </LazyLoad>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Filmes;\r\n"],"names":["content","map","section","index","slug","modules","Navigation","navigation","slidesPerView","className","loop","spaceBetween","breakpoints","_","variant","sx","background","width","height","icon","Lazy","grabCursor","lazy","preloadImages","on","lazyImageReady","swiper","console","log","results","media","id","MediaSection","styled","SectionTitle","axios_","data","type","response","filmes","useQuery","queryKey","queryFn","refetchOnWindowFocus","isLoading","offset"],"sourceRoot":""}